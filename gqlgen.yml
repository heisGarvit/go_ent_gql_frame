# models tells gqlgen where the GraphQL models is located.
schema:
  - ./**/*.graphql

# resolver reports where the resolver implementations go.
#resolver:
#  layout: follow-models
#  filename_template: "gql.gen.go"
#  filename_template: "z.custom.go"

# gqlgen will search for any type names in the models in these go packages
# if they match it will use them, otherwise it will generate them.

# autobind tells gqngen to search for any type names in the GraphQL models in the
# provided package. If they match it will use them, otherwise it will generate new.
autobind:
  - "project/src/models/ent"
  - "project/src/modules/healthcheck"
  - "project/src/modules/auth"


# This section declares type mapping between the GraphQL and Go type systems.
models:
  # Defines the ID field as Go 'int'.
  ID:
    model: project/src/utils/customfields.UUID
  DateOnly:
    model: project/src/utils/customfields.DateOnly
  TimeOnly:
    model: project/src/utils/customfields.TimeOnly
  NullString:
    model: project/src/utils/customfields.NullString
  JSON:
    model: project/src/utils/customfields.JSON
  Node:
    model:
      - project/src/models/ent.Noder

# Where should any generated models go?
model:
  filename: src/models/ent/resolvers/models.go
  package: resolvers


# Where should the generated server code go?
exec:
  filename: src/models/ent/resolvers/generated.go
  package: resolvers