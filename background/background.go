// Code generated by utils/backgroundGenerator, DO NOT EDIT.
package background

import (
	"context"
	"github.com/RichardKnop/machinery/v2/backends/result"
	"github.com/RichardKnop/machinery/v2/tasks"
	"project/utils/taskQueue"
	"project/utils/tracer"
)

type SendTask tasks.Signature

func (s SendTask) Add(x context.Context, args ...int64) (*result.AsyncResult, error) {
	ctx, span := tracer.Tracer.Start(x, "Queued Background Task Add")
	defer span.End()
	s.Name = "Add"
	for _, arg := range args {
		s.Args = append(s.Args, tasks.Arg{
			Type:  "int64",
			Value: arg,
		})
	}

	t := tasks.Signature(s)
	return taskQueue.Server.SendTaskWithContext(ctx, &t)
}
