{{- /*gotype: project/src/utils/backgroundGenerator.TemplateArgs*/ -}}

// Code generated by src/utils/backgroundGenerator, DO NOT EDIT.
package background

import (
    "context"
    "github.com/RichardKnop/machinery/v2/backends/result"
    "github.com/RichardKnop/machinery/v2/tasks"
    "project/src/infra/taskqueue"
    "project/src/utils/tracer"
)

type SendTask tasks.Signature
{{ range .Tasks }}
func (s SendTask) {{.Name}}{{.Signature}} (*result.AsyncResult, error) {
    ctx, span := tracer.Tracer.Start({{.Ctx}}, "Queued Background Task {{.Name}}")
    defer span.End()
    s.Name = "{{.Name}}"


    {{- range .Args}}
        {{- if eq .Category "variadic"}}
    for _, arg := range {{.ArgName}} {
        s.Args = append(s.Args, tasks.Arg{
        Type:  "{{.GoType}}",
        Value: arg,
        })
    }
        {{- else}}
    s.Args = append(s.Args, tasks.Arg{
        Type:  "{{.GoType}}",
        Value: {{.ArgName}},
    })
        {{- end}}
    {{end}}
    t := tasks.Signature(s)
    return taskqueue.Server.SendTaskWithContext(ctx, &t)
}
{{ end }}